name: Frontend - Build and Push Image (Digest)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile'
      - 'package.json'
      - 'angular.json'
      - 'src/**'

env:
  AZURE_ACR_NAME: ${{ vars.AZURE_ACR_NAME }}
  AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
  IMAGE_REPO: raptor/frontend-${{ vars.AZURE_ENV_NAME }}
  INFRA_REPO: arif-md/rap-infra

jobs:
  build-push:
    runs-on: ubuntu-latest
    environment: test
    timeout-minutes: 45
    concurrency:
      group: frontend-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR Login
        run: |
          set -euo pipefail
          az acr login -n "$AZURE_ACR_NAME"

      - name: Set image tag
        id: meta
        run: |
          set -euo pipefail
          echo "tag=${GITHUB_SHA::12}" >> $GITHUB_OUTPUT

      - name: Docker Buildx setup
        uses: docker/setup-buildx-action@v3

      - name: Build and push image (tag) with cache
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.IMAGE_REPO }}:${{ steps.meta.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false

      - name: Compose image by digest
        id: digest
        run: |
          set -euo pipefail
          REGISTRY="${AZURE_ACR_NAME}.azurecr.io"
          REPO="${IMAGE_REPO}"
          DIGEST="${{ steps.build.outputs.digest }}"
          if [ -z "$DIGEST" ]; then echo "Build action did not return a digest"; exit 1; fi
          IMAGE_BY_DIGEST="$REGISTRY/$REPO@$DIGEST"
          echo "image=$IMAGE_BY_DIGEST" >> $GITHUB_OUTPUT
          echo "Built and pushed: $IMAGE_BY_DIGEST"

      - name: Dispatch to infra repo with image digest
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GH_PAT_REPO_DISPATCH }}
          repository: ${{ env.INFRA_REPO }}
          event-type: frontend-image-pushed
          client-payload: |
            {"image": "${{ steps.digest.outputs.image }}"}
